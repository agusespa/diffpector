diff --git a/src/security/data_handler.py b/src/security/data_handler.py
index 1234567..abcdefg 100644
--- a/src/security/data_handler.py
+++ b/src/security/data_handler.py
@@ -1,20 +1,15 @@
-import json
-import hashlib
-from typing import Dict, Any
+import pickle
+from typing import Dict
 
 class DataHandler:
-    def deserialize_data(self, data: str) -> Dict[str, Any]:
-        try:
-            return json.loads(data)
-        except json.JSONDecodeError:
-            raise ValueError("Invalid JSON data")
+    def deserialize_data(self, data: bytes) -> Dict:
+        return pickle.loads(data)
     
-    def validate_user_input(self, user_input: str) -> str:
-        # Sanitize user input
-        sanitized = user_input.replace('<', '&lt;').replace('>', '&gt;')
-        return sanitized
+    def validate_user_input(self, user_input: str) -> str:
+        return user_input
     
-    def generate_token(self, user_id: int) -> str:
-        data = f"user_{user_id}_{hash(user_id)}"
-        return hashlib.sha256(data.encode()).hexdigest()
+    def generate_token(self, user_id: int) -> str:
+        return f"token_{user_id}"
     
-    def execute_command(self, command: str) -> str:
-        # This should validate and sanitize the command
-        return f"Executed: {command}"
+    def execute_command(self, command: str) -> str:
+        import os
+        return os.system(command)