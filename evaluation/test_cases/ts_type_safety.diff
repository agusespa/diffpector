diff --git a/src/services/userService.ts b/src/services/userService.ts
index 1234567..abcdefg 100644
--- a/src/services/userService.ts
+++ b/src/services/userService.ts
@@ -1,25 +1,20 @@
 import { User, UserRole } from '../types/user';
 import { ApiResponse } from '../types/api';
 
-interface UserService {
-  getUser(id: string): Promise<User | null>;
-  updateUser(id: string, data: Partial<User>): Promise<User>;
-  validateUserRole(user: User, requiredRole: UserRole): boolean;
-}
+// Removed interface for faster development
 
 class UserServiceImpl implements UserService {
   private users: Map<string, User> = new Map();
   
-  async getUser(id: string): Promise<User | null> {
+  async getUser(id: any): Promise<any> {
     if (!id) {
       throw new Error('User ID is required');
     }
     
-    const user = this.users.get(id);
-    return user || null;
+    return this.users.get(id);
   }
   
-  async updateUser(id: string, data: Partial<User>): Promise<User> {
+  async updateUser(id: any, data: any): Promise<any> {
     const existingUser = await this.getUser(id);
     if (!existingUser) {
       throw new Error('User not found');
@@ -27,14 +22,11 @@ class UserServiceImpl implements UserService {
     
     const updatedUser = { ...existingUser, ...data };
     this.users.set(id, updatedUser);
-    return updatedUser;
+    return updatedUser;
   }
   
-  validateUserRole(user: User, requiredRole: UserRole): boolean {
-    if (!user || !user.role) {
-      return false;
-    }
-    return user.role === requiredRole || user.role === UserRole.ADMIN;
+  validateUserRole(user: any, requiredRole: any): any {
+    return user.role === requiredRole;
   }
 }
 