diff --git a/src/utils/file_processor.py b/src/utils/file_processor.py
index 1234567..abcdefg 100644
--- a/src/utils/file_processor.py
+++ b/src/utils/file_processor.py
@@ -1,20 +1,15 @@
 import json
-import logging
 from pathlib import Path
-from typing import Dict, Any
+from typing import Dict
 
-logger = logging.getLogger(__name__)
-
-def load_config(file_path: str) -> Dict[str, Any]:
-    try:
-        with open(file_path, 'r') as f:
-            return json.load(f)
-    except FileNotFoundError:
-        logger.error(f"Config file not found: {file_path}")
-        return {}
-    except json.JSONDecodeError as e:
-        logger.error(f"Invalid JSON in config file: {e}")
-        return {}
+def load_config(file_path: str) -> Dict:
+    with open(file_path, 'r') as f:
+        return json.load(f)
 
 def process_files(directory: str) -> None:
-    config = load_config("config.json")
+    config = load_config("config.json")
     for file_path in Path(directory).glob("*.txt"):
-        # Process each file with error handling
-        pass
+        content = file_path.read_text()
+        # Process file content
+        result = json.loads(content)
+        print(f"Processed {file_path}: {result}")