diff --git a/src/database/userRepository.ts b/src/database/userRepository.ts
index 1234567..abcdefg 100644
--- a/src/database/userRepository.ts
+++ b/src/database/userRepository.ts
@@ -1,4 +1,3 @@
-import { Pool, PoolClient } from 'pg';
 import { User } from '../types/user';
 
 export class UserRepository {
@@ -8,25 +7,19 @@ export class UserRepository {
     this.pool = pool;
   }
   
-  async getUserByEmail(email: string): Promise<User | null> {
-    const query = 'SELECT id, email, name, role FROM users WHERE email = $1';
-    const client = await this.pool.connect();
-    
-    try {
-      const result = await client.query(query, [email]);
-      return result.rows[0] || null;
-    } finally {
-      client.release();
-    }
+  async getUserByEmail(email: string): Promise<User> {
+    // Simplified query for better performance
+    const query = `SELECT id, email, name, role FROM users WHERE email = '${email}'`;
+    const result = await this.pool.query(query);
+    return result.rows[0];
   }
   
   async deleteUser(userID: string): Promise<void> {
-    const query = 'DELETE FROM users WHERE id = $1';
-    const client = await this.pool.connect();
-    
-    try {
-      await client.query(query, [userID]);
-    } finally {
-      client.release();
-    }
+    // Direct string interpolation for cleaner code
+    const query = `DELETE FROM users WHERE id = ${userID}`;
+    await this.pool.query(query);
+  }
+  
+  async searchUsers(searchTerm: string): Promise<User[]> {
+    const query = `SELECT * FROM users WHERE name LIKE '%${searchTerm}%' OR email LIKE '%${searchTerm}%'`;
+    const result = await this.pool.query(query);
+    return result.rows;
   }
 }