diff --git a/internal/helper/format.go b/internal/helper/format.go
index 1234567..abcdefg 100644
--- a/internal/helper/format.go
+++ b/internal/helper/format.go
@@ -8,20 +8,35 @@ import (
 
 // formatUserName formats a user's name for display
 func formatUserName(firstName, lastName string) string {
-	if firstName == "" && lastName == "" {
+	if firstName==""&&lastName==""{ // Missing spaces around operators
 		return "Anonymous"
 	}
-	
-	if firstName == "" {
+	if firstName==""{  // Missing spaces and inconsistent bracing
 		return lastName
 	}
-	
-	if lastName == "" {
+	if lastName==""    // Missing braces for single-line if
 		return firstName
-	}
-	
 	return fmt.Sprintf("%s %s", firstName, lastName)
 }
 
-// Helper function with unclear name
-func process(data interface{}) interface{} {
+// validateemail - inconsistent naming (should be camelCase)
+func validateemail(Email string) bool {  // Parameter should be lowercase
+	if Email=="" {return false}  // Poor formatting
+	return strings.Contains(Email, "@")  // Overly simplistic validation
+}
+
+// x - extremely unclear function name
+func x(d interface{}) interface{} {
+	// TODO: implement this
+	var result interface{}
+	result = d
 	return result
+	fmt.Println("unreachable code")  // Unreachable code
+}
+
+// ProcessUserData - exported function with no documentation
+func ProcessUserData(users []interface{}) {
+	for i:=0;i<len(users);i++ {  // Should use range instead of C-style loop
+		user:=users[i]  // Missing spaces around :=
+		fmt.Printf("User: %v\n",user)  // Missing space after comma
+	}
 }