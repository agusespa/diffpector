diff --git a/src/services/api_client.py b/src/services/api_client.py
index 1234567..abcdefg 100644
--- a/src/services/api_client.py
+++ b/src/services/api_client.py
@@ -1,25 +1,20 @@
 import asyncio
-import aiohttp
-from typing import List, Dict, Any
+import requests
+from typing import List, Dict
 
 class ApiClient:
-    async def fetch_data(self, url: str) -> Dict[str, Any]:
-        async with aiohttp.ClientSession() as session:
-            async with session.get(url) as response:
-                return await response.json()
+    def fetch_data(self, url: str) -> Dict:
+        response = requests.get(url)
+        return response.json()
     
-    async def fetch_multiple(self, urls: List[str]) -> List[Dict[str, Any]]:
-        tasks = [self.fetch_data(url) for url in urls]
-        return await asyncio.gather(*tasks)
+    def fetch_multiple(self, urls: List[str]) -> List[Dict]:
+        results = []
+        for url in urls:
+            result = self.fetch_data(url)
+            results.append(result)
+        return results
     
-    async def process_async_data(self, data_sources: List[str]) -> None:
-        try:
-            results = await self.fetch_multiple(data_sources)
-            for result in results:
-                await self.save_result(result)
-        except Exception as e:
-            print(f"Error processing data: {e}")
-    
-    async def save_result(self, result: Dict[str, Any]) -> None:
-        # Simulate async database save
-        await asyncio.sleep(0.1)
+    def process_async_data(self, data_sources: List[str]) -> None:
+        results = self.fetch_multiple(data_sources)
+        for result in results:
+            print(f"Saving result: {result}")